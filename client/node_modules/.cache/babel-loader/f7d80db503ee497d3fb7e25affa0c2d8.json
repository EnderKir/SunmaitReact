{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Admin\\\\Documents\\\\SunmaitReact\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { OPEN_MODAL_LOG } from \"../const/modalLogActions\";\nimport { CLOSE_MODAL_LOG } from \"../const/modalLogActions\";\nconst initialState = {\n  isModalLogOpen: false\n};\nexport function modalLogReducer(state = initialState, action) {\n  switch (action.type) {\n    case OPEN_MODAL_LOG:\n      return _objectSpread({}, state, {\n        isModalLogOpen: true\n      });\n\n    case CLOSE_MODAL_LOG:\n      return _objectSpread({}, state, {\n        isModalLogOpen: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/SunmaitReact/client/src/reducers/modalLogReducer.js"],"names":["OPEN_MODAL_LOG","CLOSE_MODAL_LOG","initialState","isModalLogOpen","modalLogReducer","state","action","type"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,0BAA/B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE;AADG,CAArB;AAIA,OAAO,SAASC,eAAT,CAAyBC,KAAK,GAAGH,YAAjC,EAA+CI,MAA/C,EAAuD;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,cAAL;AACE,+BAAYK,KAAZ;AAAmBF,QAAAA,cAAc,EAAE;AAAnC;;AACF,SAAKF,eAAL;AACE,+BAAYI,KAAZ;AAAmBF,QAAAA,cAAc,EAAE;AAAnC;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD","sourcesContent":["import { OPEN_MODAL_LOG } from \"../const/modalLogActions\";\r\nimport { CLOSE_MODAL_LOG } from \"../const/modalLogActions\";\r\n\r\nconst initialState = {\r\n  isModalLogOpen: false\r\n};\r\n\r\nexport function modalLogReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case OPEN_MODAL_LOG:\r\n      return { ...state, isModalLogOpen: true };\r\n    case CLOSE_MODAL_LOG:\r\n      return { ...state, isModalLogOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}